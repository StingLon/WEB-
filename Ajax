JS原生Ajax和Jquery的Ajax


Ajax           Asynchronous JavaScript and XML        异步JavaScript和XML

允许浏览器与服务器通信而无须刷新当前页面的技术

异步现象：客户端发送请求到服务端，无论服务是否返回响应，客户端都可以随意做其他事情，不会卡死。

为什么用ajax？   Ajax就是能够做到局部刷新！
性能会有所降低(一点内容，刷新整个页面！)
用户的操作页面会中断(整个页面被刷新了)


XMLHttpRequest
XMLHttpRequest对象是Ajax中最重要的一个对象。使用Ajax更多的是编写客户端代码，而不是服务端的代码。

原理：
当我们使用AJAX之后，浏览器是先把请求发送到XMLHttpRequest异步对象之中，异步对象对请求进行封装，
然后再以http协议的方式发送给服务器。服务器并不是以转发的方式响应，而是以流的方式把数据返回给浏览器（因为不是转发的方式，所以是无刷新就能够获取服务器端的数据）

传统的web前端与后端的交互中，浏览器直接访问Tomcat的Servlet来获取数据。Servlet通过转发把数据发送给浏览器。


XMLHttpRequest对象在IE和Firefox中创建方式有没有不同？
有，IE中通过new ActiveXObject()得到，Firefox中通过newXMLHttpRequest()得到



readyState：请求状态readyState一改变，回调函数被调用，它有5个状态
0：未初始化
1：open方法成功调用以后
2：服务器已经应答客户端的请求
3：交互中。Http头信息已经接收，响应数据尚未接收。
4：完成。数据接收完成




优点：
1、最大的一点是页面无刷新，用户的体验非常好。
2、使用异步方式与服务器通信，具有更加迅速的响应能力。
3、减轻服务器和带宽的负担，节约空间和宽带租用成本。并且减轻服务器的负担，ajax的原则是“按需取数据”，可以最大程度的减少冗余请求，和响应对服务器造成的负担。
4、基于标准化的并被广泛支持的技术，不需要下载插件或者小程序。

缺点：
1、ajax不支持浏览器back按钮。
2、安全问题 AJAX暴露了与服务器交互的细节。
3、对搜索引擎的支持比较弱。
4、破坏了程序的异常机制。
5、不容易调试。




阐述一下异步加载JS。
异步加载的方案： 动态插入 script 标签
通过 ajax 去获取 js 代码，然后通过 eval 执行
script 标签上添加 defer 或者 async 属性
创建并插入 iframe，让它异步执行 js










JS原生Ajax
总结：所有的异步访问都是ajax引擎
步骤：
1.创建ajax引擎对象
2.设置监听
3.绑定地址      ture代表异步
4.发送
5.响应数据

 
例如：
function checkUsername(){
		// 获得文件框值:
		var  username = document.getElementById("username").value;
		// 1.创建异步交互对象
		var xhr = createXmlHttp();
		// 2.设置监听
		xhr.onreadystatechange = function(){
			if(xhr.readyState == 4){
				if(xhr.status == 200){
					document.getElementById("span1").innerHTML = xhr.responseText;
				}
			}
		}
		// 3.打开连接
		xhr.open("GET","${pageContext.request.contextPath}/user_findByName.action?time="+new Date().getTime()+"&username="+username,true);
		// 4.发送
		xhr.send(null);
	}

	function createXmlHttp(){
		   var xmlHttp;
		   try{ // Firefox, Opera 8.0+, Safari
		        xmlHttp=new XMLHttpRequest();
		    }
		    catch (e){
			   try{// Internet Explorer
			         xmlHttp=new ActiveXObject("Msxml2.XMLHTTP");
			      }
			    catch (e){
			      try{
			         xmlHttp=new ActiveXObject("Microsoft.XMLHTTP");
			      }
			      catch (e){}
			      }
		    }
			return xmlHttp;
		 }





Json数据格式
 
是一种数据交换的格式，使用AJax进行前后端数据交换 

Json是js的原生内容，也就意味着js可以直接取出json对象中的数据

两种格式：
1.对象格式：       
<script type="text/javascript">
var person={"name":"sd","age":11};
alert(person.name);
alert(person.age);
</script>

2.数组格式：
[{"id":1,"name":"ss"},{},{}]






Jquery是JS框架自然对js原生的ajax进行了封装，封装后的ajax操作更简洁更强大
其中三种常用的方法：
1.  $.get(url,[data],[callback],[type])：
2.  $.post(url,[data],[callback],[type])
3.  $.ajax({option1:value,option2:value2...});

注解：
url:
代表服务请求的服务器端地址
data:代表请求服务器的数据
callback：表示服务器端成功响应触发的函数（只有正常成功返回才执行）
type:表示服务器返回的数据类型(jquery会根据指定的类型自动类型转换)


























